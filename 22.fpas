procedure CreateSamples(Sender: TObject);
var
  Sm: TdxForm;
   sp: TdxQueryGrid;
  ii, n, ID, nn: Integer;
begin
   Sm := TdxForm.Create('Образцы'); //создае форму образцы
   ID := Self.RecId; //присваиваем идентификатор текущей пробы
   n := Self.AsI['Количество_образцов'];  //количество образцов планируемое
   ii := Self.AsI['I']; // это количество уже принятых образцов
   nn := ii; // пока номер следующей пробы будет на один больше, чем номер текущего образца, но надо посчитать максимальный номер среди текущих образцов!!!
   sp:= Self.Queries['План_образцов']; //присваиваем этот запрос (План_образцов) переменной для удобства
   sp.refresh; //обновляем запрос (План_образцов) по плану испытаний из заявки с консервацией, видом упаковки и номером образца, сортировка должна быть по возрастанию номеров образцов
   if sp.recordcount > n Then n:= sp.recordcount;  //если в запросе больше планируемых образцов, то увеличиваем количество образцов
   sp.MoveFirst;
     // Создаем новые записи в цикле.
          while ii < n do
           begin
           Sm.OpenRecord(0);
           Sm.Append;
           ii := ii + 1;
           nn := nn+1;
           Sm['Проба'] := ID;
           // IF n = 1 Then Sm['Номер_образца'] := 0 // Если образец был один, то номер ставился 0, и не отображался в шифре
           // else
            if sp['Номер_образца']<>null Then    //Если заполнен номер образца в плане испытаний, то присваиваем его, если не заполнен, то номер по порядку. Надо бы сделать проверку на наличие этого номера среди уже принятых образцов!!!
              begin
                Sm['Номер_образца'] :=sp['Номер_образца'];
                if sp.AsI['Номер_образца'] >nn Then nn:= sp.AsI['Номер_образца']; //Добавил проверку нмоера дльше номера будутприсавиваться по порядку от максимального номера в плане образцов
              end
            else
              begin
                Sm['Номер_образца'] := nn;
                end;
            if sp['Вид упаковки'] <>null Then Sm['Вид упаковки'] :=sp['Вид упаковки'] else Sm['Вид упаковки'] := Self['Вид упаковки'] ; //если упаковка в плане нне заполнена, то берем из упаковки пробы
            Sm['Консервация'] :=sp['Консервация'];  //консервацию просто присваиваем по текстовому значению
            sp.MoveNext;
            if Sp.EOF then sp.MoveFirst;
            Sm.Post;
            Sm.Close;
           end;
        IF ii >= Self.AsI['Количество_образцов'] Then
        IF Self['Пробы приняты'] = 0 Then Self['Пробы приняты'] := 1;
        Self['Количество_образцов']:=n;
        dxQueryGrid2.refresh;
       //Очищаем формы;
        Sm.free;
    end;

procedure Form_Create;
begin
 dxButton1.OnClick := @CreateSamples;
end;
